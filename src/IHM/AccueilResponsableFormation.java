/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IHM;

import Client.ClientResponsable;
import CyelPostLicence.Candidature;
import CyelPostLicence.Etudiant;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cy
 */
public class AccueilResponsableFormation extends javax.swing.JFrame {
    
    private ClientResponsable client;
    private int clik = 0;

    /**
     * Creates new form AccueilResponsableFormation
     */
    public AccueilResponsableFormation() {
        initComponents();
    }

    AccueilResponsableFormation(ClientResponsable client) {
        initComponents();
        this.client = client;
        int periode = this.client.getPeriode();
        
        
        initTableauCand();
       
    }
    
     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_candidatures = new javax.swing.JTable();
        bt_consulterNotes = new javax.swing.JButton();
        bt_classerListeAttente = new javax.swing.JButton();
        bt_refuser = new javax.swing.JButton();
        bt_accepter = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Accueil Responsable Formation");

        jLabel3.setText("Liste des demandes du Master");

        jTable_candidatures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Classement", "Nom Prenom", "Licence provenance", "Universite provenance", "Etat"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_candidatures);

        bt_consulterNotes.setText("Consulter Notes Candidat");
        bt_consulterNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_consulterNotesActionPerformed(evt);
            }
        });

        bt_classerListeAttente.setText("Enregistrer le classement");
        bt_classerListeAttente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_classerListeAttenteActionPerformed(evt);
            }
        });

        bt_refuser.setText("Refuser candidat");
        bt_refuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_refuserActionPerformed(evt);
            }
        });

        bt_accepter.setText("Accepter candidat");
        bt_accepter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_accepterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1034, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bt_refuser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bt_accepter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_classerListeAttente)
                .addGap(206, 206, 206)
                .addComponent(bt_consulterNotes)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_accepter)
                    .addComponent(bt_consulterNotes)
                    .addComponent(bt_classerListeAttente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_refuser)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_consulterNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_consulterNotesActionPerformed
        int selectedRow = jTable_candidatures.getSelectedRow();
        if (selectedRow != -1) {
            String sINE = jTable_candidatures.getValueAt(selectedRow,1).toString();
            int INE = Integer.parseInt(sINE);

            ConsulterNotesCandidat notes = new ConsulterNotesCandidat(client,INE);
            this.setVisible(false);
            notes.setVisible(true);
        }
    }//GEN-LAST:event_bt_consulterNotesActionPerformed

    private void bt_classerListeAttenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_classerListeAttenteActionPerformed
        
        String classement;
        int ine;
        for(int i=0; i<jTable_candidatures.getRowCount(); i++) {
            classement = (String) jTable_candidatures.getModel().getValueAt(i,0);
            ine = (int) jTable_candidatures.getModel().getValueAt(i,1);
            System.out.println(ine+" : "+classement);
            client.enregistrerClassement(ine,Integer.parseInt(classement));
        }
        
        AccueilResponsableFormation acc = new AccueilResponsableFormation(client);
        this.setVisible(false);
        acc.setVisible(true);
        
    }//GEN-LAST:event_bt_classerListeAttenteActionPerformed

    private void bt_refuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_refuserActionPerformed
        int selectedRow = jTable_candidatures.getSelectedRow();
        if (selectedRow != -1) {
            String sINE = jTable_candidatures.getValueAt(selectedRow,1).toString();
            int INE = Integer.parseInt(sINE);
            int classement = Integer.parseInt("-1");
            client.enregistrerClassement(INE, classement);
        }
        AccueilResponsableFormation acc = new AccueilResponsableFormation(client);
        this.setVisible(false);
        acc.setVisible(true);
    }//GEN-LAST:event_bt_refuserActionPerformed

    private void bt_accepterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_accepterActionPerformed
        int selectedRow = jTable_candidatures.getSelectedRow();
        if (selectedRow != -1) {
            String sINE = jTable_candidatures.getValueAt(selectedRow,1).toString();
            int INE = Integer.parseInt(sINE);
            client.enregistrerClassement(INE, 0);
        }
        AccueilResponsableFormation acc = new AccueilResponsableFormation(client);
        this.setVisible(false);
        acc.setVisible(true);
    }//GEN-LAST:event_bt_accepterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AccueilResponsableFormation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AccueilResponsableFormation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AccueilResponsableFormation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AccueilResponsableFormation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AccueilResponsableFormation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_accepter;
    private javax.swing.JButton bt_classerListeAttente;
    private javax.swing.JButton bt_consulterNotes;
    private javax.swing.JButton bt_refuser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_candidatures;
    // End of variables declaration//GEN-END:variables

    private void initTableauCand() {
        Candidature[] tabCandidatures;
        tabCandidatures = client.mesCandidatures();
        if(tabCandidatures != null)
        {
            DefaultTableModel model = new DefaultTableModel();
            //On renseigne les identifiants des colonnes dans le modèle
            model.setColumnIdentifiers(new String[]{ "Classement","NumINE","Nom etudiant","Prenom Etudiant", "Numero Licence","Licence Provenance", "Numero Université",  "Université Provenance", "Numero Academie", "Academie Provenance"});

            //On ajoute les ligne contenant les données dans le modèle
            for (Candidature c : tabCandidatures) {
                Etudiant e = c.etudiant;
                int classement = c.classement;
                model.addRow(new Object[]{classement,e.INE, e.nom, e.prenom, e.licence.numLicence, e.licence.nomLicence, e.universite.numUniv,e.universite.nomUniv, e.universite.academie.numAcademie, e.universite.academie.nomAcademie});
            }

            //On ajoute le modèle dans la Jtable
            jTable_candidatures.setModel(model);
            jTable_candidatures.setEnabled(true);
        }
        
            
    }
}
